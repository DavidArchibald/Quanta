#!/usr/bin/env python3

import asyncio

import discord
from discord.ext import commands

from typing import Union, Tuple, Optional, List

from .database_helper import Database

class FuzzyUser(commands.Converter):
    async def convert(
        self: FuzzyUser,
        ctx: commands.Context,
        identifier: str,
        base_message: discord.Message = None,
    ) -> Tuple[
        Optional[Union[discord.User, discord.Member, str]], Optional[discord.Message]
    ]:
        result_count: int = ...

        user: Union[discord.User, discord.Member, str] = ...

        compares: List[str] = ...
        result: List[Tuple[str, int]] = ...
        result_count: int = ...

        embed: discord.Embed = ...

        whom: discord.Message = ...
        number_emojis: List[str] = ...

        reaction: discord.Reaction = ...
        user_identifier: str = ...

        reaction_number: int = ...
    @staticmethod
    async def handle_no_user(
        ctx: commands.Context,
        user: Union[discord.User, discord.Member, str],
        message: discord.Message,
        no_user_message: str = None,
    ) -> Optional[Union[discord.User, discord.Member]]: ...

class GetUser:
    async def get_user(self: GetUser, ctx: commands.Context, fuzzy_user: FuzzyUser):
        user: Optional[Union[discord.User, discord.Member, str]] = ...
        message: discord.Message = ...

        response: Optional[Union[discord.User, discord.Member]] = ...

        content: str = ...

def setup(bot: commands.Bot, database: Database): ...
